[build-system]
requires = ["hatchling", "hatch-vcs", "hatch-docstring-description"]
build-backend = "hatchling.build"

[project]
name = "session-info2"
dynamic = ["version", "description"]
readme = "README.md"
requires-python = ">=3.10"
license = "GPL-3.0-or-later"
keywords = []
authors = [
  { name = "Philipp A.", email = "flying-sheep@web.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Typing :: Typed",
]
dependencies = []
[project.optional-dependencies]
test = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-asyncio",
  "jupyter-client",
  "ipykernel",
  # For GitHub report
  "pytest-md",
]

[project.urls]
Documentation = "https://github.com/flying-sheep/session-info2#readme"
Issues = "https://github.com/flying-sheep/session-info2/issues"
Source = "https://github.com/flying-sheep/session-info2"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
features = ["test"]
[tool.hatch.envs.default.env-vars]
JUPYTER_PLATFORM_DIRS = "1"
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[tool.pytest.ini_options]
addopts = [
  "--import-mode=importlib",
  "--strict-markers",
]
asyncio_mode = "auto"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.ruff.lint]
select = ['ALL']
ignore = [
  # Missing type annotation for self in method
  "ANN101",
  # dict(...) calls are good
  "C408",
  # 0 instead of 1 blank lines before class docstring
  "D203",
  # Multi-line docstring summary should start at the first instead of second line
  "D213",
  # TODOs are fine, no need to assign to some person
  "TD002",
  "FIX002",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D105",  # Missing docstring in magic method
  "S101",  # Use of assert
  "INP001",  # __init__.py
]
[tool.ruff.lint.isort]
known-first-party = ["session_info2"]

[tool.coverage.run]
source_pkgs = ["session_info2", "tests"]
branch = true
parallel = true
omit = [
]

[tool.coverage.paths]
session_info2 = ["src/session_info2", "*/session-info2/src/session_info2"]
tests = ["tests", "*/session-info2/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
