[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-docstring-description", "hatch-vcs", "hatchling" ]

[project]
name = "session-info2"
readme = "README.md"
keywords = [ "jupyter", "session-info" ]
license = "MPL-2.0"
authors = [ { name = "Philipp A.", email = "flying-sheep@web.de" } ]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Typing :: Typed",
]
dynamic = [ "description", "version" ]
dependencies = [  ]
optional-dependencies.docs = [
  "furo",
  "hatch",
  "myst-nb",
  "session-info2[notebook]",
  "sphinx",
  "sphinx-autodoc-typehints",
  "sphinx-codeautolink",
]
optional-dependencies.jupyter = [ "ipywidgets" ]
# Dependencies needed to run the notebook
optional-dependencies.notebook = [
  "numpy",
  "session-info",
  "session-info2[jupyter]",
]
optional-dependencies.test = [
  "coverage[toml]>=6.5",
  "ipykernel",
  "jupyter-client",
  "pytest",
  "pytest-asyncio",
  "pytest-md",               # For GitHub report
  "pytest-subprocess",
  "testing-common-database", # Example package as “test data”
]
urls.Documentation = "https://github.com/flying-sheep/session-info2#readme"
urls.Issues = "https://github.com/flying-sheep/session-info2/issues"
urls.Source = "https://github.com/flying-sheep/session-info2"

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.hatch-test]
default-args = [  ]
features = [ "test", "jupyter" ]
extra-dependencies = [ "pyinstrument" ]

[tool.hatch.envs.notebook]
# installer = "uv"  # https://github.com/astral-sh/uv/issues/6032
features = [ "notebook" ]
extra-dependencies = [ "ipykernel" ]
scripts.install-kernel = "python -m ipykernel install --user --name=session-info2 --display-name=session-info2"

[tool.hatch.envs.docs]
installer = "uv"
features = [ "docs" ]
scripts.build = "sphinx-build -W --keep-going -b html docs docs/_build/html {args}"

[tool.ruff]
lint.select = [ "ALL" ]
lint.ignore = [
  "B019",   # functools.cache is fine to use
  "C408",   # dict(...) calls are good
  "COM812", # Incompatible with formatter
  "D203",   # 0 instead of 1 blank lines before class docstring
  "D213",   # Multi-line docstring summary should start at the first instead of second line
  "FIX002", # TODOs are fine
  "ISC001", # Incompatible with formatter
  "S603",   # We don’t want to use `subprocess.run(shell=True)`
  "S607",   # We don’t run commands with untrusted input
  "TD002",  # No need to assign TODOs to some person
]
lint.per-file-ignores."**/*.ipynb" = [
  "CPY001", # Missing copyright notice in notebook is fine
  "I002",   # Missing `from __future__ import annotations` is fine
]
lint.per-file-ignores."docs/conf.py" = [
  "INP001", # __init__.py
]
lint.per-file-ignores."src/session_info2/__main__.py" = [
  "T201", # print is fine
]
lint.per-file-ignores."tests/*" = [
  "D102",   # Missing docstring in public method
  "D103",   # Missing docstring in public function
  "D105",   # Missing docstring in magic method
  "INP001", # __init__.py
  "RUF018", # assert with := is fine
  "S101",   # Use of assert
]
lint.allowed-confusables = [ "×", "’" ]
lint.flake8-copyright.notice-rgx = "SPDX-License-Identifier: MPL-2\\.0"
lint.isort.known-first-party = [ "session_info2" ]
lint.isort.required-imports = [ "from __future__ import annotations" ]
lint.pylint.max-args = 7
lint.pylint.max-positional-args = 3

[tool.pytest.ini_options]
addopts = [ "--import-mode=importlib", "--strict-markers" ]
asyncio_mode = "auto"
filterwarnings = [
  "error",
  "ignore:Jupyter is migrating its paths:DeprecationWarning",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:dateutil",
]

[tool.coverage.run]
source_pkgs = [ "session_info2", "tests" ]
branch = true
parallel = true
omit = [  ]

[tool.coverage.paths]
session_info2 = [ "src/session_info2", "*/session-info2/src/session_info2" ]
tests = [ "tests", "*/session-info2/tests" ]

[tool.coverage.report]
exclude_lines = [ "no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:" ]

[tool.mypy]
strict = true
explicit_package_bases = true
mypy_path = [ "$MYPY_CONFIG_FILE_DIR/stubs", "$MYPY_CONFIG_FILE_DIR/src" ]

[tool.pyright]
stubPath = "./stubs"
reportPrivateUsage = false

[tool.esbonio.sphinx]
pythonCommand = [ "hatch", "-e", "docs", "run", "python" ]
